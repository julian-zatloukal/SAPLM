
Placa motriz codigo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000028a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  000002e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000097  00000000  00000000  000009ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000038  00000000  00000000  00000a43  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000044  00000000  00000000  00000a7b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000067d  00000000  00000000  00000abf  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000172  00000000  00000000  0000113c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000481  00000000  00000000  000012ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000050  00000000  00000000  00001730  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000014d  00000000  00000000  00001780  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000011e  00000000  00000000  000018cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 00000038  00000000  00000000  000019eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00001a23  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 07 01 	call	0x20e	; 0x20e <main>
  78:	0c 94 43 01 	jmp	0x286	; 0x286 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <initIO>:
			CSN	 : PC1						|	OUTPUT
			MISO : PD0 (MSPIM MISO ATMEGA)	|	INPUT
			MOSI : PD1 (MSPIM MOSI ATMEGA)	|	OUTPUT
			SCK	 : PD4 (MSPIM XCK)			|	OUTPUT
	*/ 
	DDRD = 0b11111111;
  80:	8f ef       	ldi	r24, 0xFF	; 255
  82:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0b00101111;
  84:	8f e2       	ldi	r24, 0x2F	; 47
  86:	84 b9       	out	0x04, r24	; 4
	DDRC = 0b11011111;
  88:	8f ed       	ldi	r24, 0xDF	; 223
  8a:	87 b9       	out	0x07, r24	; 7
}
  8c:	08 95       	ret

0000008e <moveMotorA>:

void moveMotorA(){
  8e:	84 e1       	ldi	r24, 0x14	; 20
	for (uint8_t x = 0; x < 20;x++){
		PORTD = 0b00000011;
  90:	e3 e0       	ldi	r30, 0x03	; 3
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b00000110;
  92:	36 e0       	ldi	r19, 0x06	; 6
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b00001100;
  94:	2c e0       	ldi	r18, 0x0C	; 12
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b00001001;
  96:	99 e0       	ldi	r25, 0x09	; 9
	DDRC = 0b11011111;
}

void moveMotorA(){
	for (uint8_t x = 0; x < 20;x++){
		PORTD = 0b00000011;
  98:	eb b9       	out	0x0b, r30	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9a:	4f ef       	ldi	r20, 0xFF	; 255
  9c:	54 e3       	ldi	r21, 0x34	; 52
  9e:	6c e0       	ldi	r22, 0x0C	; 12
  a0:	41 50       	subi	r20, 0x01	; 1
  a2:	50 40       	sbci	r21, 0x00	; 0
  a4:	60 40       	sbci	r22, 0x00	; 0
  a6:	e1 f7       	brne	.-8      	; 0xa0 <moveMotorA+0x12>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <moveMotorA+0x1c>
  aa:	00 00       	nop
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b00000110;
  ac:	3b b9       	out	0x0b, r19	; 11
  ae:	4f ef       	ldi	r20, 0xFF	; 255
  b0:	54 e3       	ldi	r21, 0x34	; 52
  b2:	6c e0       	ldi	r22, 0x0C	; 12
  b4:	41 50       	subi	r20, 0x01	; 1
  b6:	50 40       	sbci	r21, 0x00	; 0
  b8:	60 40       	sbci	r22, 0x00	; 0
  ba:	e1 f7       	brne	.-8      	; 0xb4 <moveMotorA+0x26>
  bc:	00 c0       	rjmp	.+0      	; 0xbe <moveMotorA+0x30>
  be:	00 00       	nop
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b00001100;
  c0:	2b b9       	out	0x0b, r18	; 11
  c2:	4f ef       	ldi	r20, 0xFF	; 255
  c4:	54 e3       	ldi	r21, 0x34	; 52
  c6:	6c e0       	ldi	r22, 0x0C	; 12
  c8:	41 50       	subi	r20, 0x01	; 1
  ca:	50 40       	sbci	r21, 0x00	; 0
  cc:	60 40       	sbci	r22, 0x00	; 0
  ce:	e1 f7       	brne	.-8      	; 0xc8 <moveMotorA+0x3a>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <moveMotorA+0x44>
  d2:	00 00       	nop
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b00001001;
  d4:	9b b9       	out	0x0b, r25	; 11
  d6:	4f ef       	ldi	r20, 0xFF	; 255
  d8:	54 e3       	ldi	r21, 0x34	; 52
  da:	6c e0       	ldi	r22, 0x0C	; 12
  dc:	41 50       	subi	r20, 0x01	; 1
  de:	50 40       	sbci	r21, 0x00	; 0
  e0:	60 40       	sbci	r22, 0x00	; 0
  e2:	e1 f7       	brne	.-8      	; 0xdc <moveMotorA+0x4e>
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <moveMotorA+0x58>
  e6:	00 00       	nop
  e8:	81 50       	subi	r24, 0x01	; 1
	DDRB = 0b00101111;
	DDRC = 0b11011111;
}

void moveMotorA(){
	for (uint8_t x = 0; x < 20;x++){
  ea:	b1 f6       	brne	.-84     	; 0x98 <moveMotorA+0xa>
		PORTD = 0b00001001;
		_delay_ms(MOTOR_SPEED_MS);
	}
	
	for (uint8_t x = 0; x < 20;x++){
		PORTD = 0b00001100;
  ec:	ec e0       	ldi	r30, 0x0C	; 12
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b00000110;
  ee:	36 e0       	ldi	r19, 0x06	; 6
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b00000011;
  f0:	23 e0       	ldi	r18, 0x03	; 3
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b00001001;
  f2:	99 e0       	ldi	r25, 0x09	; 9
		PORTD = 0b00001001;
		_delay_ms(MOTOR_SPEED_MS);
	}
	
	for (uint8_t x = 0; x < 20;x++){
		PORTD = 0b00001100;
  f4:	eb b9       	out	0x0b, r30	; 11
  f6:	4f ef       	ldi	r20, 0xFF	; 255
  f8:	54 e3       	ldi	r21, 0x34	; 52
  fa:	6c e0       	ldi	r22, 0x0C	; 12
  fc:	41 50       	subi	r20, 0x01	; 1
  fe:	50 40       	sbci	r21, 0x00	; 0
 100:	60 40       	sbci	r22, 0x00	; 0
 102:	e1 f7       	brne	.-8      	; 0xfc <moveMotorA+0x6e>
 104:	00 c0       	rjmp	.+0      	; 0x106 <moveMotorA+0x78>
 106:	00 00       	nop
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b00000110;
 108:	3b b9       	out	0x0b, r19	; 11
 10a:	4f ef       	ldi	r20, 0xFF	; 255
 10c:	54 e3       	ldi	r21, 0x34	; 52
 10e:	6c e0       	ldi	r22, 0x0C	; 12
 110:	41 50       	subi	r20, 0x01	; 1
 112:	50 40       	sbci	r21, 0x00	; 0
 114:	60 40       	sbci	r22, 0x00	; 0
 116:	e1 f7       	brne	.-8      	; 0x110 <moveMotorA+0x82>
 118:	00 c0       	rjmp	.+0      	; 0x11a <moveMotorA+0x8c>
 11a:	00 00       	nop
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b00000011;
 11c:	2b b9       	out	0x0b, r18	; 11
 11e:	4f ef       	ldi	r20, 0xFF	; 255
 120:	54 e3       	ldi	r21, 0x34	; 52
 122:	6c e0       	ldi	r22, 0x0C	; 12
 124:	41 50       	subi	r20, 0x01	; 1
 126:	50 40       	sbci	r21, 0x00	; 0
 128:	60 40       	sbci	r22, 0x00	; 0
 12a:	e1 f7       	brne	.-8      	; 0x124 <moveMotorA+0x96>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <moveMotorA+0xa0>
 12e:	00 00       	nop
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b00001001;
 130:	9b b9       	out	0x0b, r25	; 11
 132:	4f ef       	ldi	r20, 0xFF	; 255
 134:	54 e3       	ldi	r21, 0x34	; 52
 136:	6c e0       	ldi	r22, 0x0C	; 12
 138:	41 50       	subi	r20, 0x01	; 1
 13a:	50 40       	sbci	r21, 0x00	; 0
 13c:	60 40       	sbci	r22, 0x00	; 0
 13e:	e1 f7       	brne	.-8      	; 0x138 <moveMotorA+0xaa>
 140:	00 c0       	rjmp	.+0      	; 0x142 <moveMotorA+0xb4>
 142:	00 00       	nop
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b00001001;
		_delay_ms(MOTOR_SPEED_MS);
	}
	
	for (uint8_t x = 0; x < 20;x++){
 144:	8f 5f       	subi	r24, 0xFF	; 255
 146:	84 31       	cpi	r24, 0x14	; 20
 148:	a9 f6       	brne	.-86     	; 0xf4 <moveMotorA+0x66>
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b00001001;
		_delay_ms(MOTOR_SPEED_MS);
	}
	
	PORTD = 0b00000000;
 14a:	1b b8       	out	0x0b, r1	; 11
}
 14c:	08 95       	ret

0000014e <moveMotorB>:

void moveMotorB(){
 14e:	84 e1       	ldi	r24, 0x14	; 20
	for (uint8_t x = 0; x < 20;x++){
		PORTD = 0b00110000;
 150:	e0 e3       	ldi	r30, 0x30	; 48
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b01100000;
 152:	30 e6       	ldi	r19, 0x60	; 96
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b11000000;
 154:	20 ec       	ldi	r18, 0xC0	; 192
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b10010000;
 156:	90 e9       	ldi	r25, 0x90	; 144
	PORTD = 0b00000000;
}

void moveMotorB(){
	for (uint8_t x = 0; x < 20;x++){
		PORTD = 0b00110000;
 158:	eb b9       	out	0x0b, r30	; 11
 15a:	4f ef       	ldi	r20, 0xFF	; 255
 15c:	54 e3       	ldi	r21, 0x34	; 52
 15e:	6c e0       	ldi	r22, 0x0C	; 12
 160:	41 50       	subi	r20, 0x01	; 1
 162:	50 40       	sbci	r21, 0x00	; 0
 164:	60 40       	sbci	r22, 0x00	; 0
 166:	e1 f7       	brne	.-8      	; 0x160 <moveMotorB+0x12>
 168:	00 c0       	rjmp	.+0      	; 0x16a <moveMotorB+0x1c>
 16a:	00 00       	nop
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b01100000;
 16c:	3b b9       	out	0x0b, r19	; 11
 16e:	4f ef       	ldi	r20, 0xFF	; 255
 170:	54 e3       	ldi	r21, 0x34	; 52
 172:	6c e0       	ldi	r22, 0x0C	; 12
 174:	41 50       	subi	r20, 0x01	; 1
 176:	50 40       	sbci	r21, 0x00	; 0
 178:	60 40       	sbci	r22, 0x00	; 0
 17a:	e1 f7       	brne	.-8      	; 0x174 <moveMotorB+0x26>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <moveMotorB+0x30>
 17e:	00 00       	nop
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b11000000;
 180:	2b b9       	out	0x0b, r18	; 11
 182:	4f ef       	ldi	r20, 0xFF	; 255
 184:	54 e3       	ldi	r21, 0x34	; 52
 186:	6c e0       	ldi	r22, 0x0C	; 12
 188:	41 50       	subi	r20, 0x01	; 1
 18a:	50 40       	sbci	r21, 0x00	; 0
 18c:	60 40       	sbci	r22, 0x00	; 0
 18e:	e1 f7       	brne	.-8      	; 0x188 <moveMotorB+0x3a>
 190:	00 c0       	rjmp	.+0      	; 0x192 <moveMotorB+0x44>
 192:	00 00       	nop
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b10010000;
 194:	9b b9       	out	0x0b, r25	; 11
 196:	4f ef       	ldi	r20, 0xFF	; 255
 198:	54 e3       	ldi	r21, 0x34	; 52
 19a:	6c e0       	ldi	r22, 0x0C	; 12
 19c:	41 50       	subi	r20, 0x01	; 1
 19e:	50 40       	sbci	r21, 0x00	; 0
 1a0:	60 40       	sbci	r22, 0x00	; 0
 1a2:	e1 f7       	brne	.-8      	; 0x19c <moveMotorB+0x4e>
 1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <moveMotorB+0x58>
 1a6:	00 00       	nop
 1a8:	81 50       	subi	r24, 0x01	; 1
	
	PORTD = 0b00000000;
}

void moveMotorB(){
	for (uint8_t x = 0; x < 20;x++){
 1aa:	b1 f6       	brne	.-84     	; 0x158 <moveMotorB+0xa>
		PORTD = 0b10010000;
		_delay_ms(MOTOR_SPEED_MS);
	}
	
	for (uint8_t x = 0; x < 20;x++){
		PORTD = 0b11000000;
 1ac:	e0 ec       	ldi	r30, 0xC0	; 192
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b01100000;
 1ae:	30 e6       	ldi	r19, 0x60	; 96
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b00110000;
 1b0:	20 e3       	ldi	r18, 0x30	; 48
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b10010000;
 1b2:	90 e9       	ldi	r25, 0x90	; 144
		PORTD = 0b10010000;
		_delay_ms(MOTOR_SPEED_MS);
	}
	
	for (uint8_t x = 0; x < 20;x++){
		PORTD = 0b11000000;
 1b4:	eb b9       	out	0x0b, r30	; 11
 1b6:	4f ef       	ldi	r20, 0xFF	; 255
 1b8:	54 e3       	ldi	r21, 0x34	; 52
 1ba:	6c e0       	ldi	r22, 0x0C	; 12
 1bc:	41 50       	subi	r20, 0x01	; 1
 1be:	50 40       	sbci	r21, 0x00	; 0
 1c0:	60 40       	sbci	r22, 0x00	; 0
 1c2:	e1 f7       	brne	.-8      	; 0x1bc <moveMotorB+0x6e>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <moveMotorB+0x78>
 1c6:	00 00       	nop
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b01100000;
 1c8:	3b b9       	out	0x0b, r19	; 11
 1ca:	4f ef       	ldi	r20, 0xFF	; 255
 1cc:	54 e3       	ldi	r21, 0x34	; 52
 1ce:	6c e0       	ldi	r22, 0x0C	; 12
 1d0:	41 50       	subi	r20, 0x01	; 1
 1d2:	50 40       	sbci	r21, 0x00	; 0
 1d4:	60 40       	sbci	r22, 0x00	; 0
 1d6:	e1 f7       	brne	.-8      	; 0x1d0 <moveMotorB+0x82>
 1d8:	00 c0       	rjmp	.+0      	; 0x1da <moveMotorB+0x8c>
 1da:	00 00       	nop
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b00110000;
 1dc:	2b b9       	out	0x0b, r18	; 11
 1de:	4f ef       	ldi	r20, 0xFF	; 255
 1e0:	54 e3       	ldi	r21, 0x34	; 52
 1e2:	6c e0       	ldi	r22, 0x0C	; 12
 1e4:	41 50       	subi	r20, 0x01	; 1
 1e6:	50 40       	sbci	r21, 0x00	; 0
 1e8:	60 40       	sbci	r22, 0x00	; 0
 1ea:	e1 f7       	brne	.-8      	; 0x1e4 <moveMotorB+0x96>
 1ec:	00 c0       	rjmp	.+0      	; 0x1ee <moveMotorB+0xa0>
 1ee:	00 00       	nop
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b10010000;
 1f0:	9b b9       	out	0x0b, r25	; 11
 1f2:	4f ef       	ldi	r20, 0xFF	; 255
 1f4:	54 e3       	ldi	r21, 0x34	; 52
 1f6:	6c e0       	ldi	r22, 0x0C	; 12
 1f8:	41 50       	subi	r20, 0x01	; 1
 1fa:	50 40       	sbci	r21, 0x00	; 0
 1fc:	60 40       	sbci	r22, 0x00	; 0
 1fe:	e1 f7       	brne	.-8      	; 0x1f8 <moveMotorB+0xaa>
 200:	00 c0       	rjmp	.+0      	; 0x202 <moveMotorB+0xb4>
 202:	00 00       	nop
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b10010000;
		_delay_ms(MOTOR_SPEED_MS);
	}
	
	for (uint8_t x = 0; x < 20;x++){
 204:	8f 5f       	subi	r24, 0xFF	; 255
 206:	84 31       	cpi	r24, 0x14	; 20
 208:	a9 f6       	brne	.-86     	; 0x1b4 <moveMotorB+0x66>
		_delay_ms(MOTOR_SPEED_MS);
		PORTD = 0b10010000;
		_delay_ms(MOTOR_SPEED_MS);
	}
	
	PORTD = 0b00000000;
 20a:	1b b8       	out	0x0b, r1	; 11
}
 20c:	08 95       	ret

0000020e <main>:
void initIO();
void moveMotorA();
void moveMotorB();

int main(void)
{
 20e:	ef 92       	push	r14
 210:	ff 92       	push	r15
 212:	0f 93       	push	r16
 214:	1f 93       	push	r17
    initIO();
 216:	0e 94 40 00 	call	0x80	; 0x80 <initIO>
	
    while (1) 
    {
		for (uint8_t x = 0; x < 6;x++){
 21a:	80 e0       	ldi	r24, 0x00	; 0
			bit_flip(PORTB, BIT(0));
 21c:	ee 24       	eor	r14, r14
 21e:	e3 94       	inc	r14
			_delay_ms(125);
			bit_flip(PORTB, BIT(1));
 220:	ff 24       	eor	r15, r15
 222:	68 94       	set
 224:	f1 f8       	bld	r15, 1
			_delay_ms(125);
			bit_flip(PORTB, BIT(2));
 226:	04 e0       	ldi	r16, 0x04	; 4
{
    initIO();
	
    while (1) 
    {
		for (uint8_t x = 0; x < 6;x++){
 228:	10 e0       	ldi	r17, 0x00	; 0
 22a:	25 c0       	rjmp	.+74     	; 0x276 <main+0x68>
			bit_flip(PORTB, BIT(0));
 22c:	95 b1       	in	r25, 0x05	; 5
 22e:	9e 25       	eor	r25, r14
 230:	95 b9       	out	0x05, r25	; 5
 232:	2f e7       	ldi	r18, 0x7F	; 127
 234:	3a e1       	ldi	r19, 0x1A	; 26
 236:	46 e0       	ldi	r20, 0x06	; 6
 238:	21 50       	subi	r18, 0x01	; 1
 23a:	30 40       	sbci	r19, 0x00	; 0
 23c:	40 40       	sbci	r20, 0x00	; 0
 23e:	e1 f7       	brne	.-8      	; 0x238 <main+0x2a>
 240:	00 c0       	rjmp	.+0      	; 0x242 <main+0x34>
 242:	00 00       	nop
			_delay_ms(125);
			bit_flip(PORTB, BIT(1));
 244:	95 b1       	in	r25, 0x05	; 5
 246:	9f 25       	eor	r25, r15
 248:	95 b9       	out	0x05, r25	; 5
 24a:	2f e7       	ldi	r18, 0x7F	; 127
 24c:	3a e1       	ldi	r19, 0x1A	; 26
 24e:	46 e0       	ldi	r20, 0x06	; 6
 250:	21 50       	subi	r18, 0x01	; 1
 252:	30 40       	sbci	r19, 0x00	; 0
 254:	40 40       	sbci	r20, 0x00	; 0
 256:	e1 f7       	brne	.-8      	; 0x250 <main+0x42>
 258:	00 c0       	rjmp	.+0      	; 0x25a <main+0x4c>
 25a:	00 00       	nop
			_delay_ms(125);
			bit_flip(PORTB, BIT(2));
 25c:	95 b1       	in	r25, 0x05	; 5
 25e:	90 27       	eor	r25, r16
 260:	95 b9       	out	0x05, r25	; 5
 262:	2f e7       	ldi	r18, 0x7F	; 127
 264:	3a e1       	ldi	r19, 0x1A	; 26
 266:	46 e0       	ldi	r20, 0x06	; 6
 268:	21 50       	subi	r18, 0x01	; 1
 26a:	30 40       	sbci	r19, 0x00	; 0
 26c:	40 40       	sbci	r20, 0x00	; 0
 26e:	e1 f7       	brne	.-8      	; 0x268 <main+0x5a>
 270:	00 c0       	rjmp	.+0      	; 0x272 <main+0x64>
 272:	00 00       	nop
{
    initIO();
	
    while (1) 
    {
		for (uint8_t x = 0; x < 6;x++){
 274:	8f 5f       	subi	r24, 0xFF	; 255
 276:	86 30       	cpi	r24, 0x06	; 6
 278:	c8 f2       	brcs	.-78     	; 0x22c <main+0x1e>
			_delay_ms(125);
			bit_flip(PORTB, BIT(2));
			_delay_ms(125);
		}
		
		moveMotorA();
 27a:	0e 94 47 00 	call	0x8e	; 0x8e <moveMotorA>
		moveMotorB();
 27e:	0e 94 a7 00 	call	0x14e	; 0x14e <moveMotorB>
{
    initIO();
	
    while (1) 
    {
		for (uint8_t x = 0; x < 6;x++){
 282:	81 2f       	mov	r24, r17
 284:	f8 cf       	rjmp	.-16     	; 0x276 <main+0x68>

00000286 <_exit>:
 286:	f8 94       	cli

00000288 <__stop_program>:
 288:	ff cf       	rjmp	.-2      	; 0x288 <__stop_program>
